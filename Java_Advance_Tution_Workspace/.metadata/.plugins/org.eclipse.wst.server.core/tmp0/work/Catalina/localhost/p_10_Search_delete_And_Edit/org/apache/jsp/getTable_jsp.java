/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.47
 * Generated at: 2023-06-07 09:14:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class getTable_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		String search=request.getParameter("search");
		session.setAttribute("search",search);
		Class.forName("com.mysql.jdbc.Driver");
		Connection c=DriverManager.getConnection("jdbc:mysql://localhost/db","root","root");
		Statement s=c.createStatement();
		ResultSet r=s.executeQuery("SELECT * FROM register WHERE firstname LIKE '"+session.getAttribute("search")+"%'");
		
      out.write("<table border=\"1px solid black\">");

		
      out.write("<tr>\r\n");
      out.write("\t\t<td>id</td>\r\n");
      out.write("\t\t<td>firstname</td>\r\n");
      out.write("\t\t<td>lastname</td>\r\n");
      out.write("\t\t<td>address</td>\r\n");
      out.write("\t\t<td>email</td>\r\n");
      out.write("\t\t<td>city</td>\r\n");
      out.write("\t\t<td>username</td>\r\n");
      out.write("\t\t<td>password</td>\r\n");
      out.write("\t\t<td>hobbies</td>\r\n");
      out.write("\t\t<td>gender</td>\r\n");
      out.write("\t\t<td>action</td>\r\n");
      out.write("\t\t</tr>");

		while(r.next()){
			int id=r.getInt("id");
			String fn=r.getString("firstname");
			String ln=r.getString("lastname");
			String addre=r.getString("address");
			String email=r.getString("email");
			String city=r.getString("city");
			String user=r.getString("username");
			String pass=r.getString("password");
			String hobbies=r.getString("hobbies");
			String gender=r.getString("gender");
			
      out.write("<tr>");

			
      out.write("<td>");
out.print(id);
      out.write("</td>");

			
      out.write("<td>");
out.print(fn);
      out.write("</td>");

			
      out.write("<td>");
out.print(ln);
      out.write("</td>");

			
      out.write("<td>");
out.print(addre);
      out.write("</td>");

			
      out.write("<td>");
out.print(email);
      out.write("</td>");

			
      out.write("<td>");
out.print(city);
      out.write("</td>");

			
      out.write("<td>");
out.print(user);
      out.write("</td>");

			
      out.write("<td>");
out.print(pass);
      out.write("</td>");

			
      out.write("<td>");
out.print(hobbies);
      out.write("</td>");

			
      out.write("<td>");
out.print(gender);
      out.write("</td>");

			
      out.write("<td><button><a\r\n");
      out.write("\t\t\thref=\"delete_1.jsp?id=");
      out.print(r.getInt("id"));
      out.write("\">delete</a></button>\r\n");
      out.write("\t\t\t<button><a\r\n");
      out.write("\t\t\thref=\"edit_1.jsp?id=");
      out.print(r.getInt("id"));
      out.write("\">edit</a></button></td>");

			
		}
		
      out.write("</table>");
 	
	
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
